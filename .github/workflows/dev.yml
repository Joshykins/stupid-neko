name: Development Deployment

on:
  pull_request:
    branches: [main]
  push:
    branches-ignore: [main]
  workflow_dispatch:

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: development
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Pull environment variables (dev)
        run: pnpm pull-env:dev
        env:
          INFISICAL_TOKEN_DEV: ${{ secrets.INFISICAL_TOKEN_DEV }}
          INFISICAL_PROJECT_ID: ${{ secrets.INFISICAL_PROJECT_ID }}

      - name: Deploy Convex (dev)
        run: |
          npx convex deploy --cmd 'pnpm build' --cmd-url-env-var-name CONVEX_URL
        env:
          CONVEX_DEPLOY_KEY: ${{ secrets.CONVEX_DEPLOY_KEY }}

      - name: Build browser extension
        run: pnpm build:extension

      - name: Upload Chrome extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension-dev
          path: apps/browser-extension/dist/chrome/
          retention-days: 30

      - name: Upload Firefox extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: firefox-extension-dev
          path: apps/browser-extension/dist/firefox/
          retention-days: 30

      - name: Deploy to Vercel (preview)
        run: |
          npx vercel@latest deploy --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
